clc;
clear;
close all;

%% SPACECRAFT
names = ["Base_torque4mNm.txt","Base_torque6mNm.txt","Base_torque8mNm.txt","Base_torque10mNm.txt"];
for i = 1:length(names)
% loading in data
filename = names(i);
rawData = load(filename);

%assigning columns
time = rawData(1:700,1).*(10^-3); %convert from ms to s
commanded_torque = rawData(1:700,2) .* (10^-3); %baseline to compare
angular_velocity = rawData(1:700,3) .* ((2*pi) / 60); %multiplied by -1
current = rawData(1:700,4);

% Calculations

%finding torque using current since it is mentioned in 3.3a
torque_const = 25.5 * (10^-3); %mNm/A, given in the experimental procedures
torque = (current*torque_const); %Nm
threshold = max(torque) * 0.1;
torque_active = find(torque > threshold);
commanded_torque_c = commanded_torque(torque_active);
torque_c = torque(torque_active);
time_c = time(torque_active);
angular_velocity_c = angular_velocity(torque_active);

%finding average angular acceleration
angular_velocity_eq = polyfit(time_c, angular_velocity_c, 1);
angular_velocity_smooth = polyval(angular_velocity_eq, time_c);
angular_acceleration_smooth = -angular_velocity_eq(1,1);

%moment of inertia
MoI_smooth = torque_c / angular_acceleration_smooth;
MOI_num(i) = mean(MoI_smooth);
MOI_std(i) = std(MoI_smooth);




% Graphing
graph_toggle = 0;

if graph_toggle == 1
%graphing time vs calculated torque
nexttile
hold on
plot(time_c,torque_c)
plot(time_c,commanded_torque_c) %baseline
%xlim([time_c(1), time_c(end)]);
ylabel("Torque (Nm)");
xlabel("Time (s)");
title("Torque vs. Time");
grid on;
hold off

%graphing angular velocity vs time
nexttile
hold on
plot(time_c, -angular_velocity_smooth, 'b');
plot(time_c,angular_velocity_c.*-1, 'g');
%xlim([time_c(1), time_c(end)]);
ylabel("Angular Velocity (rad/s)");
xlabel("Time (s)")
title("Angular Velocity vs Time");
grid on
hold off


%graphing angular acceleration vs time
nexttile
yline(angular_acceleration_smooth);
%xlim([time_c(1), time_c(end)]);
ylabel('Angular Acceleration (rad/s^2)');
xlabel("Time (s)");
title("Angular Acceleraion vs Time");
grid on;

%graphing MOI
nexttile
plot(time_c, MoI_smooth);
% xlim([time_c(1), time_c(end)]);
ylabel('Moment of Inertia (kg m^2)');
xlabel("Time (s)");
title("Moment of Inertia vs Time");
grid on;

end

end
% Average MOI
SC_Final_MOI = mean(MOI_num)
SC_Final_MOI_STD = mean(MOI_std)


%% RW
names = ["2025_09_23_001_Torque_RW_5mNm.txt","2025_09_23_001_Torque_RW_8mNm.txt","2025_09_23_001_Torque_RW_12mNm.txt","2025_09_23_001_Torque_RW_16mNm.txt", "2025_09_23_001_Torque_RW_20mNm_5sec.txt"];
for i = 1:length(names)
% loading in data
filename = names(i);
rawData = load(filename);

%assigning columns
time = rawData(1:700,1).*(10^-3); %convert from ms to s
commanded_torque = rawData(1:700,2) .* (10^-3); %baseline to compare
angular_velocity = -rawData(1:700,3) .* ((2*pi) / 60); %multiplied by -1
current = rawData(1:700,4);

% Calculations

%finding torque using current since it is mentioned in 3.3a
torque_const = 33.5 * (10^-3); %mNm/A, given in the experimental procedures
torque = (current*torque_const); %Nm
threshold = max(torque) * 0.85;
torque_active = find(torque > threshold);
commanded_torque_c = commanded_torque(torque_active);
torque_c = torque(torque_active);
time_c = time(torque_active);
angular_velocity_c = angular_velocity(torque_active);

%finding average angular acceleration
angular_velocity_eq = polyfit(time_c, angular_velocity_c, 1);
angular_velocity_smooth = polyval(angular_velocity_eq, time_c);
angular_acceleration_smooth = -angular_velocity_eq(1,1);

%moment of inertia
MoI_smooth = torque_c / angular_acceleration_smooth;
MOI_num(i) = mean(MoI_smooth);
MOI_std(i) = std(MoI_smooth);




% Graphing
graph_toggle = 0;

if graph_toggle == 1
figure(i)
%graphing time vs calculated torque
nexttile
hold on
plot(time_c,torque_c)
plot(time_c,commanded_torque_c) %baseline
%xlim([time_c(1), time_c(end)]);
ylabel("Torque (Nm)");
xlabel("Time (s)");
title("Torque vs. Time");
grid on;
hold off

%graphing angular velocity vs time
nexttile
hold on
plot(time_c, -angular_velocity_smooth, 'b');
plot(time_c,angular_velocity_c.*-1, 'g');
%xlim([time_c(1), time_c(end)]);
ylabel("Angular Velocity (rad/s)");
xlabel("Time (s)")
title("Angular Velocity vs Time");
grid on
hold off


%graphing angular acceleration vs time
nexttile
yline(angular_acceleration_smooth);
%xlim([time_c(1), time_c(end)]);
ylabel('Angular Acceleration (rad/s^2)');
xlabel("Time (s)");
title("Angular Acceleraion vs Time");
grid on;

%graphing MOI
nexttile
plot(time_c, MoI_smooth);
% xlim([time_c(1), time_c(end)]);
ylabel('Moment of Inertia (kg m^2)');
xlabel("Time (s)");
title("Moment of Inertia vs Time");
grid on;

end

end
% Average MOI
RW_Final_MOI = mean(MOI_num)
RW_Final_MOI_STD = mean(MOI_std)


%% Saturation Calculations
Omega_Max = 4000 * ((2*pi) / 60); %rad/s
Ext_Torque = 10^-4; %Nm
alpha = Ext_Torque / RW_Final_MOI; %Nms^2
t_saturated = Omega_Max / alpha %s
Angular_Momentum_cap = RW_Final_MOI * Omega_Max %Nms
